@page "/"

<h1>Demo of issue with Blazor Virtualize and CSS rendering.</h1>

<p>
    Switch html and css taken from <a href="https://www.w3schools.com/howto/howto_css_switch.asp" target="_blank">https://www.w3schools.com/howto/howto_css_switch.asp</a>.<br/>
    Scroll each table to see the effect.
</p>

<div style="min-height: 50vh; max-height: 50vh; width: 150px;  overflow: auto; float: left;">
    <h3>With transition</h3>
    <table>
        <thead>
        <tr>
            <th>ID</th>
            <th>Toggle</th>
        </tr>
        </thead>
        <tbody>
        <Virtualize Context="item" Items="@items">
            <tr>
                <td>@item.Id</td>
                <td>
                    <label class="switch">
                        <input type="checkbox"
                               checked="@item.Checked">
                        <span class="slider round"></span>
                    </label>
                </td>
            </tr>
        </Virtualize> 
        </tbody>
    </table>
</div>

<div style="min-height: 50vh; max-height: 50vh; width: 150px; overflow: auto; float: left;">
    <h3>Without transition</h3>
    <table>
        <thead>
        <tr>
            <th>ID</th>
            <th>Toggle</th>
        </tr>
        </thead>
        <tbody>
        <Virtualize Context="item" Items="@items">
            <tr>
                <td>@item.Id</td>
                <td>
                    <label class="switch">
                        <input type="checkbox"
                               checked="@item.Checked">
                        <span class="slider no-transition round"></span>
                    </label>
                </td>
            </tr>
        </Virtualize> 
        </tbody>
    </table>
</div>

@code {
    private readonly Item[] items =
        (from num in Enumerable.Range(1, 100)
        select new Item {Id=num, Checked = num % 2 == 0}).ToArray();

    private class Item
    {
        public int Id { get; set; }
        public bool Checked { get; set; }
    }
}